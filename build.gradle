import org.apache.tools.ant.taskdefs.condition.Os
import org.elasticsearch.gradle.LoggedExec

String enabledStr = properties.get('xpack.kibana.build', 'true')
if (['true', 'false'].contains(enabledStr) == false) {
  throw new GradleException("xpack.kibana.build must be true or false, got ${enabledStr}")
}
boolean kibanaEnabled = enabledStr == 'true'

task clean(type: Delete) {
  group = 'Build'
  description = 'Delete all previously built output'
  delete 'build'
  delete 'node_modules'
}

task npmInstall(type: LoggedExec) {
  enabled = kibanaEnabled
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine 'cmd', '/C', 'npm', 'install'
  } else {
    commandLine 'npm', 'install'
  }
}

task test(type: LoggedExec, dependsOn: npmInstall) {
  enabled = kibanaEnabled
  group = 'Verification'
  description = 'Run npm tests'
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine 'cmd', '/C', 'npm', 'run', 'test'
  } else {
    commandLine 'npm', 'run', 'test'
  }
}

task check(dependsOn: test) {
  group = 'Verification'
  description = 'Run all verification tasks'
}

task npmBuild(type: LoggedExec, dependsOn: npmInstall) {
  enabled = kibanaEnabled
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine 'cmd', '/C', 'npm', 'run', 'build'
  } else {
    commandLine 'npm', 'run', 'build'
  }
  if (System.getProperty('build.snapshot', 'true') == 'false') {
    args '--', '--release'
  }
}

task bundlePlugin(type: Zip, dependsOn: npmBuild) {
  enabled = kibanaEnabled
  from 'build/plugin'
  destinationDir file('build/distributions')
  baseName = 'ml'
  version = project.version
}

task assemble(dependsOn: bundlePlugin) {
  group = 'Build'
  description = 'Assemble the ml kibana zip'
}

task build(dependsOn: [check, assemble]) {
  group = 'Build'
  description = 'Assembles and tests the kibana ml'
}
