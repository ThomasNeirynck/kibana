[[configuring-reporting]]
== Configuring Reporting

By default, a new encryption key is generated for {reporting} each time
you start Kibana. This means any pending reports will fail if you
restart Kibana.

To set a static encryption key for reporting, set the
`xpack.reporting.encryptionKey` property in the `kibana.yml`
configuration file. You can use any text string as the encryption key.

[source,yaml]
--------------------------------------------------------------------------------
xpack.reporting.encryptionKey: "something_secret"
--------------------------------------------------------------------------------

NOTE: If you are load balancing across multiple Kibana instances, they need
to have the same reporting encryption key. Otherwise, report generation
will fail if a report is requested through one instance and another instance
picks up the job from the report queue.

You can also configure settings in `kibana.yml` to control how {reporting}
communicates with the Kibana server, manages background jobs, and captures
screenshots. See <<reporting-settings, Reporting Settings>> for the complete
list of settings.

[[securing-reporting]]
=== Securing the Reporting Endpoints

In a production environment, you should restrict access to
the {reporting} endpoints to authorized users. This requires that you:

. <<security-getting-started, Enable {security}>> on your Elasticsearch
cluster.
. <<configure-kibana-cert, Configure an SSL certificate>> for Kibana.
. Configure {watcher} to trust the Kibana server's certificate by adding it to
the {watcher} truststore on each node:
.. Import the Kibana server certificate into the {watcher} truststore using
Java Keytool:
+
[source,shell]
---------------------------------------------------------
keytool -importcert -keystore watcher-truststore.jks -file server.crt
---------------------------------------------------------
+
NOTE: If the truststore doesn't already exist, it is created.

.. Make sure the `watcher.http.ssl.truststore.path` setting in
`elasticsearch.yml` specifies the location of the {watcher}
truststore.
. <<secure-reporting, Add one or more users>> who have the permissions
necessary to use Kibana and {reporting}.

Once you've enabled SSL for Kibana, all requests to the {reporting} endpoints
must include valid credentials. For example, the following watch submits
requests as the built-in `elastic` user:

include::watch-example.asciidoc[]

For more information about configuring watches, see <<how-watcher-works, How
Watches Work>>.
